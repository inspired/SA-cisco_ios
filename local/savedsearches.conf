[__generate_cisco_ios_snmp_interfaces]
action.email.reportServerEnabled = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
description = Cisco IOS SNMP Interface generator
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.general.type = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SA-cisco_ios
request.ui_dispatch_view = search
search = sourcetype=Cisco:SNMP:Interfaces UID=* | stats first(host) AS host, first(ifName) AS ifName, first(ifOperStatus) AS ifOperStatus, first(ifAdminStatus) AS ifAdminStatus, first(ifIndex) AS ifIndex, first(ifType) AS ifType, first(ifDescr) AS ifDescr, first(ifAlias) AS ifAlias, first(ifHighSpeed) AS ifHighSpeed, first(_time) AS updated_at by UID | search "ifType"=* | outputlookup CiscoSNMPInterfaces.csv

[__generate_cisco_ios_snmp_info]
action.email.reportServerEnabled = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 0 * * *
description = Cisco IOS SNMP Info generator
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","sysDescr","sysName","sysUpTimeInstance"]
display.general.type = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SA-cisco_ios
request.ui_dispatch_view = search
search = sourcetype="Cisco:SNMP:Info" sysDescr=* OR sysName=* | stats first(sysDescr) AS sysDescr, first(sysName) AS sysName by host | outputlookup CiscoSNMPInfo.csv

[Cisco IOS SNMP Interfaces]
action.email.reportServerEnabled = 0
alert.severity = 1
alert.suppress = 0
alert.track = 0
cron_schedule = 0 0 * * *
description = Cisco IOS SNMP Interfaces
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","sysDescr","sysName","sysUpTimeInstance"]
display.general.timeRangePicker.show = 0
display.general.type = statistics
display.visualizations.show = 0
quantity = 0
relation = greater than
request.ui_dispatch_app = SA-cisco_ios
request.ui_dispatch_view = search
search = sourcetype=Cisco:SNMP:Interfaces UID=* ifHCInOctets=* | streamstats current=f global=f window=1\
     first(ifHCInOctets) as next_ifHCInOctets, first(_time) as next_time by host,UID | eval dt=next_time-_time\
 | eval difHCInOctets=next_ifHCInOctets-ifHCInOctets\
 | eval rifHCInOctets=difHCInOctets/dt | eval in_bytes=rifHCInOctets*8 | lookup CiscoSNMPInterfaces host,UID | stats sparkline(avg(in_bytes),10m) AS utilization_in by host,ifDescr,ifAlias,ifOperStatus,ifAdminStatus,ifIndex | sort host,ifIndex | table host,ifDescr,ifAlias,ifOperStatus,ifAdminStatus,utilization_in

[__generate_cisco_ios_hosts]
action.email.reportServerEnabled = 0
alert.severity = 1
alert.suppress = 0
alert.track = 1
counttype = number of events
cron_schedule = 0 23 * * *
description = Hosts reporting last period
dispatch.earliest_time = -1d
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","sysDescr","sysName","sysUpTimeInstance"]
display.general.type = statistics
enableSched = 1
quantity = 0
relation = greater than
request.ui_dispatch_app = SA-cisco_ios
request.ui_dispatch_view = search
search = sourcetype=cisco:ios | stats count AS total_events,first(_time) as updated_at by host | outputlookup CiscoIOSHosts.csv
